{
  "A01:2021 - Broken Access Control": {
    "it": {
      "description": "Le vulnerabilità di access control emergono quando i controlli basati su ruoli o autorizzazioni sono assenti, mal implementati o aggirabili tramite manipolazioni dell'input o forzature di URL/API. Questo può consentire l'elevazione di privilegi o l'accesso diretto a risorse riservate.\n\n**Esempio:** Un utente autenticato modifica il proprio ID in un parametro GET e accede ai dati di un altro utente.",
      "link": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/"
    },
    "level": "alto"
  },
  "A02:2021 - Cryptographic Failures": {
    "it": {
      "description": "Queste vulnerabilità derivano da algoritmi deboli, gestione errata delle chiavi, uso improprio dei certificati o assenza di protezione per i dati in transito o a riposo. L'attaccante può intercettare, alterare o decifrare dati sensibili.\n\n**Esempio:** Password utente salvate in chiaro o cifrate con MD5 senza salt.",
      "link": "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/"
    },
    "level": "alto"
  },
  "A03:2021 - Injection": {
    "it": {
      "description": "Le injection permettono all'attaccante di inviare comandi non autorizzati all'interprete tramite input controllati, portando a esecuzione di comandi, dump di database, o compromissione del sistema.\n\n**Esempio:** Form di login vulnerabile a SQLi: input `' OR '1'='1` consente accesso non autorizzato.",
      "link": "https://owasp.org/Top10/A03_2021-Injection/"
    },
    "level": "critico"
  },
  "A04:2021 - Insecure Design": {
    "it": {
      "description": "Un design non sicuro riflette la mancanza di modellazione delle minacce o l'assenza di misure di sicurezza nei flussi logici. Spesso porta a violazioni evitabili con una corretta architettura iniziale.\n\n**Esempio:** Un'app non prevede controlli di autorizzazione nei flussi di checkout o modifica dei profili.",
      "link": "https://owasp.org/Top10/A04_2021-Insecure_Design/"
    },
    "level": "medio"
  },
  "A05:2021 - Security Misconfiguration": {
    "it": {
      "description": "Configurazioni errate o predefinite nei servizi, software o ambienti espongono dati, interfacce o funzionalità non intenzionali. Questo include debug attivo, porte aperte, errori dettagliati e servizi non necessari.\n\n**Esempio:** Server Apache espone mod_status e file di configurazione accessibili via web.",
      "link": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/"
    },
    "level": "alto"
  },
  "A06:2021 - Vulnerable and Outdated Components": {
    "it": {
      "description": "L'uso di librerie, framework o componenti con CVE note e non aggiornate permette all'attaccante di sfruttare exploit pubblici. Queste vulnerabilità sono spesso note ma trascurate nei processi di aggiornamento.\n\n**Esempio:** WordPress con plugin noto vulnerabile che consente upload arbitrario.",
      "link": "https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/"
    },
    "level": "medio"
  },
  "A07:2021 - Identification and Authentication Failures": {
    "it": {
      "description": "Problemi di autenticazione includono gestione errata delle credenziali, assenza di MFA, sessioni non invalidate o prevedibili. Consentono impersonificazione, brute-force e hijacking.\n\n**Esempio:** Session ID statico o non rigenerato dopo login permette session fixation.",
      "link": "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/"
    },
    "level": "alto"
  },
  "A08:2021 - Software and Data Integrity Failures": {
    "it": {
      "description": "Include uso di pacchetti non verificati, pipeline CI/CD compromesse o aggiornamenti non firmati, che possono introdurre codice malevolo all’interno di build o deployment.\n\n**Esempio:** CI/CD scarica script da repo GitHub senza checksum o firma.",
      "link": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"
    },
    "level": "medio"
  },
  "A09:2021 - Security Logging and Monitoring Failures": {
    "it": {
      "description": "La mancanza di log, allarmi o tracciamento compromette il rilevamento tempestivo degli attacchi e l'efficacia della risposta. Gli attaccanti possono agire indisturbati per lungo tempo.\n\n**Esempio:** Brute-force non rilevato poiché non vengono loggati i tentativi falliti.",
      "link": "https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/"
    },
    "level": "basso"
  },
  "A10:2021 - Server-Side Request Forgery (SSRF)": {
    "it": {
      "description": "In un attacco SSRF, l'attaccante induce il server a fare richieste HTTP verso risorse interne o esterne, spesso bypassando i firewall. Questo può portare a info disclosure o movimenti laterali.\n\n**Esempio:** Input in un campo URL consente accesso a `http://localhost:8080/admin` dal server target.",
      "link": "https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_(SSRF)/"
    },
    "level": "medio"
  }
}